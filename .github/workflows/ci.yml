name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Applications
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Clean and install dependencies
      run: |
        rm -f pnpm-lock.yaml
        rm -rf node_modules apps/*/node_modules
        pnpm install --fetch-timeout=300000
      env:
        NODE_OPTIONS: "--max-old-space-size=4096"

    - name: Run backend tests
      run: |
        cd apps/api
        npm test
      env:
        CI: true
        NODE_OPTIONS: "--max-old-space-size=4096"

    - name: Run frontend tests
      run: |
        cd apps/web
        npm test
      env:
        CI: true
        NODE_OPTIONS: "--max-old-space-size=4096"

    - name: Build backend
      run: |
        cd apps/api
        npm run build
      env:
        NODE_OPTIONS: "--max-old-space-size=4096"

    - name: Build frontend
      run: |
        cd apps/web
        npm run build
      env:
        NODE_OPTIONS: "--max-old-space-size=4096"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          apps/api/coverage/
          apps/web/coverage/
